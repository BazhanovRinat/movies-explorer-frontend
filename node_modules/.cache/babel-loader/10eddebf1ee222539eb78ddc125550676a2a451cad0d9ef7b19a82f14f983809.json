{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCard\\\\MoviesCard.js\",\n  _s = $RefreshSig$();\n// import testimage from '../../images/test-image.png';\n// import buttnNoLikeImage from '../../images/button-noLike__image.svg'\n// import deleteButton from '../../images/delete__button.svg'\n// import { Link, useLocation } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import buttonLikeImage from '../../images/button-like__image.svg'\n// import { mainApi } from \"../../utils/MainApi\";\n// import { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\n\n// function MoviesCard({ movie }) {\n\n//     const [isLiked, setIsLiked] = useState(false)\n//     const [likedMovies, setLikedMovies] = useState([]);\n\n//     const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\n\n//     function numberToTime(number) {\n//         const hours = Math.floor(number / 60);\n//         const minutes = number % 60;\n//         return `${hours}ч${minutes}м`;\n//     }\n\n//     function changeLikeState() {\n//       setIsLiked(!isLiked);\n\n//       // Если фильм лайкнут, добавьте его в список лайкнутых карточек\n//       if (!isLiked) {\n//         setLikedMovies([...likedMovies, movie]);\n//       } else {\n//         const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\n//         setLikedMovies(updatedLikedMovies);\n//       }\n//     }\n\n//     useEffect(() => {\n//       // Если isSaving становится true, значит, нужно отправить данные в mainApi\n//       if (isSaving) {\n//         mainApi.addMovie(movie)\n//           .then((response) => {\n//             // Обработка успешного сохранения\n//             console.log('Фильм успешно сохранен в mainApi');\n//           })\n//           .catch((error) => {\n//             // Обработка ошибки\n//             console.error('Ошибка при сохранении фильма:', error);\n//           })\n//           .finally(() => {\n//             setIsSaving(false); // Сбрасываем флаг после завершения запроса\n//           });\n//       }\n//     }, [isSaving]);\n\n//     useEffect(() => {\n//       // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\n//       setIsSaving(true);\n//     }, [likedMovies]);\n\n//     const { pathname } = useLocation()\n\n//     console.log(movie)\n\n//     return (\n//         <div className=\"moviesCard\">\n//             <Link to={movie.trailerLink} target=\"_blank\">\n//                 <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\n//             </Link>\n//             <div className=\"moviesCard__container\">\n//                 <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\n//                 {\n//                     pathname === \"/saved-movies\"\n//                         ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\n//                         : <button\n//                             className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\n//                                 alt=\"Изображение сердца\"></img></button>\n//                 }\n//             </div>\n//             <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\n//         </div>\n//     );\n// }\n\n// export default MoviesCard;\n\nimport testimage from '../../images/test-image.png';\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg';\nimport deleteButton from '../../images/delete__button.svg';\nimport { Link, useLocation } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport buttonLikeImage from '../../images/button-like__image.svg';\nimport { mainApi } from \"../../utils/MainApi\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesCard({\n  movie\n}) {\n  _s();\n  const [isLiked, setIsLiked] = useState(false);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [movieDelete, setMovieDelete] = useState([]);\n  const profileData = React.useContext(CurrentUserContext);\n  function numberToTime(number) {\n    const hours = Math.floor(number / 60);\n    const minutes = number % 60;\n    return `${hours}ч${minutes}м`;\n  }\n  function changeLikeState() {\n    setIsLiked(!isLiked);\n    const movieDublicate = {\n      image: `https://api.nomoreparties.co${movie.image.url}`,\n      trailerLink: movie.trailerLink,\n      thumbnail: 'https://api.nomoreparties.co' + movie.image.url,\n      movieId: movie.id,\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN,\n      owner: profileData._id\n    };\n    if (!isLiked) {\n      setLikedMovies(movie);\n      mainApi.addMovie(movieDublicate).then(res => {\n        console.log('Фильм успешно добавлен');\n      }).catch(error => {\n        console.log('Ошибка при добавлении фильма');\n      });\n    } else {\n      setLikedMovies(movie);\n      console.log(movie);\n      mainApi.getMovies().then(data => {\n        setMovieDelete(data.find(item => item.movieId === movieDublicate.movieId));\n        console.log(movieDelete);\n      }).catch(error => {\n        console.log(error);\n      });\n      // mainApi.deleteMovie(isMovieInData) {\n\n      // }\n    }\n  }\n\n  function deleteMovie(movie) {\n    console.log(movie);\n    mainApi.deleteMovie(movie._id).then(res => {\n      console.log('Фильм успешно удален');\n    }).catch(error => {\n      console.log('Ошибка при удалении фильма');\n    });\n  }\n  const {\n    pathname\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesCard\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: movie.trailerLink,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moviesCard__image\",\n        src: pathname === \"/movies\" ? `https://api.nomoreparties.co${movie.image.url}` : `${movie.image}`,\n        alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moviesCard__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"moviesCard__name\",\n        children: movie.nameRU\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), pathname === \"/saved-movies\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteButton,\n          onClick: () => deleteMovie(movie),\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: changeLikeState,\n          src: isLiked ? buttonLikeImage : buttnNoLikeImage,\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"moviesCard__movie-time\",\n      children: numberToTime(movie.duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n_s(MoviesCard, \"SUuIwOe1anNtZQMMUSLHPaJ0oFA=\", false, function () {\n  return [useLocation];\n});\n_c = MoviesCard;\nexport default MoviesCard;\nvar _c;\n$RefreshReg$(_c, \"MoviesCard\");","map":{"version":3,"names":["testimage","buttnNoLikeImage","deleteButton","Link","useLocation","React","useEffect","useState","buttonLikeImage","mainApi","CurrentUserContext","jsxDEV","_jsxDEV","MoviesCard","movie","_s","isLiked","setIsLiked","likedMovies","setLikedMovies","movieDelete","setMovieDelete","profileData","useContext","numberToTime","number","hours","Math","floor","minutes","changeLikeState","movieDublicate","image","url","trailerLink","thumbnail","movieId","id","country","director","duration","year","description","nameRU","nameEN","owner","_id","addMovie","then","res","console","log","catch","error","getMovies","data","find","item","deleteMovie","pathname","className","children","to","target","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/MoviesCard/MoviesCard.js"],"sourcesContent":["// import testimage from '../../images/test-image.png';\r\n// import buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\n// import deleteButton from '../../images/delete__button.svg'\r\n// import { Link, useLocation } from \"react-router-dom\";\r\n// import { useEffect, useState } from \"react\";\r\n// import buttonLikeImage from '../../images/button-like__image.svg'\r\n// import { mainApi } from \"../../utils/MainApi\";\r\n// import { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\n// function MoviesCard({ movie }) {\r\n\r\n//     const [isLiked, setIsLiked] = useState(false)\r\n//     const [likedMovies, setLikedMovies] = useState([]);\r\n\r\n//     const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\r\n\r\n//     function numberToTime(number) {\r\n//         const hours = Math.floor(number / 60);\r\n//         const minutes = number % 60;\r\n//         return `${hours}ч${minutes}м`;\r\n//     }\r\n\r\n//     function changeLikeState() {\r\n//       setIsLiked(!isLiked);\r\n\r\n//       // Если фильм лайкнут, добавьте его в список лайкнутых карточек\r\n//       if (!isLiked) {\r\n//         setLikedMovies([...likedMovies, movie]);\r\n//       } else {\r\n//         const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\r\n//         setLikedMovies(updatedLikedMovies);\r\n//       }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//       // Если isSaving становится true, значит, нужно отправить данные в mainApi\r\n//       if (isSaving) {\r\n//         mainApi.addMovie(movie)\r\n//           .then((response) => {\r\n//             // Обработка успешного сохранения\r\n//             console.log('Фильм успешно сохранен в mainApi');\r\n//           })\r\n//           .catch((error) => {\r\n//             // Обработка ошибки\r\n//             console.error('Ошибка при сохранении фильма:', error);\r\n//           })\r\n//           .finally(() => {\r\n//             setIsSaving(false); // Сбрасываем флаг после завершения запроса\r\n//           });\r\n//       }\r\n//     }, [isSaving]);\r\n\r\n//     useEffect(() => {\r\n//       // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\r\n//       setIsSaving(true);\r\n//     }, [likedMovies]);\r\n\r\n//     const { pathname } = useLocation()\r\n\r\n//     console.log(movie)\r\n\r\n//     return (\r\n//         <div className=\"moviesCard\">\r\n//             <Link to={movie.trailerLink} target=\"_blank\">\r\n//                 <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\r\n//             </Link>\r\n//             <div className=\"moviesCard__container\">\r\n//                 <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n//                 {\r\n//                     pathname === \"/saved-movies\"\r\n//                         ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\r\n//                         : <button\r\n//                             className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n//                                 alt=\"Изображение сердца\"></img></button>\r\n//                 }\r\n//             </div>\r\n//             <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MoviesCard;\r\n\r\n\r\nimport testimage from '../../images/test-image.png';\r\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\nimport deleteButton from '../../images/delete__button.svg'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport buttonLikeImage from '../../images/button-like__image.svg'\r\nimport { mainApi } from \"../../utils/MainApi\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nfunction MoviesCard({ movie }) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [likedMovies, setLikedMovies] = useState([]);\r\n    const [movieDelete, setMovieDelete] = useState([])\r\n\r\n    const profileData = React.useContext(CurrentUserContext)\r\n\r\n    function numberToTime(number) {\r\n        const hours = Math.floor(number / 60);\r\n        const minutes = number % 60;\r\n        return `${hours}ч${minutes}м`;\r\n    }\r\n\r\n    function changeLikeState() {\r\n        setIsLiked(!isLiked);\r\n\r\n        const movieDublicate = {\r\n            image: `https://api.nomoreparties.co${movie.image.url}`,\r\n            trailerLink: movie.trailerLink,\r\n            thumbnail: 'https://api.nomoreparties.co' + movie.image.url,\r\n            movieId: movie.id,\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n            owner: profileData._id\r\n        }\r\n\r\n        if (!isLiked) {\r\n            setLikedMovies(movie);\r\n            mainApi.addMovie(movieDublicate)\r\n                .then((res) => {\r\n                    console.log('Фильм успешно добавлен');\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Ошибка при добавлении фильма');\r\n                });\r\n        } else {\r\n            setLikedMovies(movie);\r\n            console.log(movie)\r\n            mainApi.getMovies()\r\n                .then((data) => {\r\n                    setMovieDelete(data.find(item => item.movieId === movieDublicate.movieId));\r\n                    console.log(movieDelete)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n                // mainApi.deleteMovie(isMovieInData) {\r\n\r\n                // }\r\n        }\r\n    }\r\n\r\n    function deleteMovie(movie) {\r\n        console.log(movie);\r\n        mainApi.deleteMovie(movie._id)\r\n            .then((res) => {\r\n                console.log('Фильм успешно удален');\r\n            })\r\n            .catch((error) => {\r\n                console.log('Ошибка при удалении фильма');\r\n            });\r\n    }\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    return (\r\n        <div className=\"moviesCard\">\r\n            <Link to={movie.trailerLink} target=\"_blank\">\r\n                <img className=\"moviesCard__image\" src={pathname === \"/movies\" ? `https://api.nomoreparties.co${movie.image.url}`\r\n                    : `${movie.image}`}\r\n                    alt=\"Изображение фильма\"></img>\r\n            </Link>\r\n            <div className=\"moviesCard__container\">\r\n                <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n                {\r\n                    pathname === \"/saved-movies\"\r\n                        ? <button className=\"moviesCard__button\"><img src={deleteButton} onClick={() => deleteMovie(movie)}\r\n                            alt=\"Изображение крестика\"></img></button>\r\n                        : <button\r\n                            className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n                                alt=\"Изображение сердца\"></img></button>\r\n                }\r\n            </div>\r\n            <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}