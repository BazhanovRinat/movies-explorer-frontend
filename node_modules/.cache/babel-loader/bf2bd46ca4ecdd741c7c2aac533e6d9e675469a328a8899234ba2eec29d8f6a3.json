{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { moviesApi } from \"../../utils/MoviesApi\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport { mainApi } from \"../../utils/MainApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movies({\n  openPopupError\n}) {\n  _s();\n  const [renderMovies, setRenderMovies] = useState([]);\n  const [allMovies, setAllMovies] = useState([]);\n  const [shortMovies, setShortMovies] = useState([]);\n  const [maxVisibleMovies, setMaxVisibleMovies] = useState(() => {\n    if (window.innerWidth <= 749) {\n      return 5;\n    } else if (window.innerWidth <= 1024) {\n      return 8;\n    } else if (window.innerWidth <= 1149) {\n      return 15;\n    } else {\n      return 16;\n    }\n  });\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searched, setSearched] = useState(false);\n  const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false;\n  const [extraSearched, setExtraSearched] = useState(false);\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    const storedValue = localStorage.getItem('isShortMovies');\n    if (storedValue === 'true') {\n      setIsShortMovies(true);\n    } else {\n      setIsShortMovies(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (isShortMovies !== null) {\n      localStorage.setItem('isShortMovies', isShortMovies.toString());\n    }\n  }, [isShortMovies]);\n  useEffect(() => {\n    const storedMovies = JSON.parse(localStorage.getItem('allMovies'));\n    if (storedMovies) {\n      setSearched(true);\n      setAllMovies(storedMovies);\n      if (isShortMovies) {\n        const shortMovies = storedMovies.filter(({\n          duration\n        }) => duration <= 40);\n        setShortMovies(shortMovies);\n        setRenderMovies(shortMovies);\n      } else {\n        setShortMovies([]);\n        setRenderMovies(storedMovies);\n      }\n    }\n  }, [isShortMovies]);\n  useEffect(() => {\n    mainApi.getMovies().then(data => {\n      setSavedMovies(data);\n    }).catch(err => {\n      console.log(err);\n      openPopupError(true);\n    });\n  }, [isShortMovies]);\n  useEffect(() => {\n    console.log(isShortMovies);\n  }, [isShortMovies]);\n  function findMovie(filter) {\n    setIsLoading(true);\n    moviesApi.getMovies().then(data => {\n      let filteredMovies = data.filter(({\n        nameRU\n      }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\n      setAllMovies(filteredMovies);\n      setShortMovies(filteredMovies.filter(({\n        duration\n      }) => duration <= 40));\n      localStorage.setItem('allMovies', JSON.stringify(filteredMovies));\n      if (isShortMovies === true) {\n        setRenderMovies(allMovies);\n      } else {\n        setRenderMovies(shortMovies);\n      }\n      setSearched(true);\n      //setExtraSearched(true)\n    }).catch(error => {\n      console.log(`${error}`);\n      openPopupError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleCheckboxChange() {\n    setIsShortMovies(!isShortMovies);\n    if (isShortMovies === true) {\n      setRenderMovies(allMovies);\n    } else {\n      setRenderMovies(shortMovies);\n    }\n  }\n  function loadMoreMovies() {\n    let cardsToAdd = 4;\n    if (screenWidth <= 1150) {\n      cardsToAdd = 3;\n    }\n    if (screenWidth <= 1025) {\n      cardsToAdd = 2;\n    }\n    setMaxVisibleMovies(currentMaxVisibleMovies => currentMaxVisibleMovies + cardsToAdd);\n  }\n  function updateVisibleMovies() {\n    if (!isShortMovies) {\n      const moviesToShow = allMovies.slice(0, maxVisibleMovies);\n      return moviesToShow;\n    } else {\n      const moviesToShow = shortMovies.slice(0, maxVisibleMovies);\n      return moviesToShow;\n    }\n  }\n  useEffect(() => {\n    if (searched) {\n      const updatedRenderMovies = updateVisibleMovies();\n      setRenderMovies(updatedRenderMovies);\n    }\n  }, [maxVisibleMovies, searched, isShortMovies, allMovies, shortMovies]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      findMovie: findMovie,\n      handleCheckboxChange: handleCheckboxChange,\n      isShortMovies: isShortMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preloader\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: searched && renderMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0424\\u0438\\u043B\\u044C\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [searched && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n          movies: renderMovies,\n          savedMovies: savedMovies,\n          openPopupError: openPopupError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"movies__moreMovies-btn\",\n          onClick: loadMoreMovies,\n          children: \"\\u0415\\u0449\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(Movies, \"P5lmgcTfXSCmRf+uJrHYb1/YUbA=\");\n_c = Movies;\nexport default Movies;\n\n// import React, { useState, useEffect } from 'react';\n// import { moviesApi } from \"../../utils/MoviesApi\";\n// import SearchForm from \"../SearchForm/SearchForm\";\n// import MoviesCardList from \"../MoviesCardList/MoviesCardList\";\n// import { mainApi } from \"../../utils/MainApi\";\n\n// function Movies({ openPopupError }) {\n\n//     const [renderMovies, setRenderMovies] = useState([]);\n//     const [allMovies, setAllMovies] = useState([]);\n//     const [shortMovies, setShortMovies] = useState([]);\n//     const [maxVisibleMovies, setMaxVisibleMovies] = useState(() => {\n//         if (window.innerWidth <= 749) {\n//             return 5;\n//         } else if (window.innerWidth <= 1024) {\n//             return 8;\n//         } else if (window.innerWidth <= 1149) {\n//             return 15;\n//         } else {\n//             return 16;\n//         }\n//     });\n//     const [savedMovies, setSavedMovies] = useState([])\n//     const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n//     const [isLoading, setIsLoading] = useState(false);\n\n//     const [searched, setSearched] = useState(false);\n\n//     const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\n//     const [extraSearched, setExtraSearched] = useState(false)\n\n//     useEffect(() => {\n//         function handleResize() {\n//             setScreenWidth(window.innerWidth);\n//         }\n\n//         window.addEventListener('resize', handleResize);\n\n//         return () => {\n//             window.removeEventListener('resize', handleResize);\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         const storedValue = localStorage.getItem('isShortMovies');\n//         if (storedValue === 'true') {\n//             setIsShortMovies(true);\n//         } else {\n//             setIsShortMovies(false);\n//         }\n//     }, []);\n\n//     useEffect(() => {\n//         if (isShortMovies !== null) {\n//             localStorage.setItem('isShortMovies', isShortMovies.toString());\n//         }\n//     }, [isShortMovies]);\n\n//     useEffect(() => {\n//         const storedMovies = JSON.parse(localStorage.getItem('allMovies'));\n//         if (storedMovies) {\n//             setSearched(true);\n//             setAllMovies(storedMovies);\n\n//             if (isShortMovies) {\n//                 const shortMovies = storedMovies.filter(({ duration }) => duration <= 40);\n//                 setShortMovies(shortMovies);\n//                 setRenderMovies(shortMovies);\n//             } else {\n//                 setShortMovies([]);\n//                 setRenderMovies(storedMovies);\n//             }\n//         }\n//     }, [isShortMovies]);\n\n//     useEffect(() => {\n//         mainApi.getMovies()\n//             .then((data) => {\n//                 setSavedMovies(data);\n//             })\n//             .catch((err) => {\n//                 console.log(err);\n//                 openPopupError(true);\n//             });\n//     }, [isShortMovies]);\n\n//     useEffect(() => {\n//         console.log(isShortMovies)\n//     }, [isShortMovies]);\n\n//     function findMovie(filter) {\n//         setIsLoading(true);\n//         moviesApi.getMovies()\n//             .then((data) => {\n//                 let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\n//                 setAllMovies(filteredMovies);\n//                 setShortMovies(filteredMovies.filter(({ duration }) => duration <= 40))\n//                 localStorage.setItem('allMovies', JSON.stringify(filteredMovies));\n\n//                 if (isShortMovies === true) {\n//                     setRenderMovies(allMovies)\n//                 } else {\n//                     setRenderMovies(shortMovies)\n//                 }\n\n//                 setSearched(true);\n//                 //setExtraSearched(true)\n//             })\n//             .catch((error) => {\n//                 console.log(`${error}`);\n//                 openPopupError(true)\n//             })\n//             .finally(() => {\n//                 setIsLoading(false);\n//             })\n//     }\n\n//     function handleCheckboxChange() {\n//         setIsShortMovies(!isShortMovies);\n//         if (isShortMovies === true) {\n//             setRenderMovies(allMovies)\n//         } else {\n//             setRenderMovies(shortMovies)\n//         }\n//     }\n\n//     function loadMoreMovies() {\n//         let cardsToAdd = 4;\n//         if (screenWidth <= 1150) {\n//             cardsToAdd = 3;\n//         }\n//         if (screenWidth <= 1025) {\n//             cardsToAdd = 2;\n//         }\n//         setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\n//     }\n\n//     function updateVisibleMovies() {\n//         if (!isShortMovies) {\n//             const moviesToShow = allMovies.slice(0, maxVisibleMovies);\n//             return moviesToShow;\n//         } else {\n//             const moviesToShow = shortMovies.slice(0, maxVisibleMovies);\n//             return moviesToShow;\n//         }\n//     }\n\n//     useEffect(() => {\n//         if (searched) {\n//             const updatedRenderMovies = updateVisibleMovies();\n//             setRenderMovies(updatedRenderMovies);\n//         }\n//     }, [maxVisibleMovies, searched, isShortMovies, allMovies, shortMovies]);\n\n//     return (\n//         <main className=\"movies\">\n//             <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\n//             {isLoading ? (\n//                 <div className=\"preloader\">\n//                     <span className=\"loader\"></span>\n//                 </div>\n//             ) : (\n//                 <>\n//                     {searched && renderMovies.length === 0 ? (\n//                         <p>Фильм не найден</p>\n//                     ) : (\n//                         <>\n//                             {searched && <MoviesCardList movies={renderMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\n//                             <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\n//                         </>\n//                     )}\n//                 </>\n//             )}\n//         </main>\n//     );\n// }\n\n// export default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","moviesApi","SearchForm","MoviesCardList","mainApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","openPopupError","_s","renderMovies","setRenderMovies","allMovies","setAllMovies","shortMovies","setShortMovies","maxVisibleMovies","setMaxVisibleMovies","window","innerWidth","savedMovies","setSavedMovies","screenWidth","setScreenWidth","isLoading","setIsLoading","searched","setSearched","isShortMovies","setIsShortMovies","localStorage","getItem","extraSearched","setExtraSearched","handleResize","addEventListener","removeEventListener","storedValue","setItem","toString","storedMovies","JSON","parse","filter","duration","getMovies","then","data","catch","err","console","log","findMovie","filteredMovies","nameRU","toLowerCase","includes","stringify","error","finally","handleCheckboxChange","loadMoreMovies","cardsToAdd","currentMaxVisibleMovies","updateVisibleMovies","moviesToShow","slice","updatedRenderMovies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { moviesApi } from \"../../utils/MoviesApi\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\nimport { mainApi } from \"../../utils/MainApi\";\r\n\r\nfunction Movies({ openPopupError }) {\r\n\r\n    const [renderMovies, setRenderMovies] = useState([]);\r\n    const [allMovies, setAllMovies] = useState([]);\r\n    const [shortMovies, setShortMovies] = useState([]);\r\n    const [maxVisibleMovies, setMaxVisibleMovies] = useState(() => {\r\n        if (window.innerWidth <= 749) {\r\n            return 5;\r\n        } else if (window.innerWidth <= 1024) {\r\n            return 8;\r\n        } else if (window.innerWidth <= 1149) {\r\n            return 15;\r\n        } else {\r\n            return 16;\r\n        }\r\n    });\r\n    const [savedMovies, setSavedMovies] = useState([])\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [searched, setSearched] = useState(false);\r\n\r\n    const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\r\n    const [extraSearched, setExtraSearched] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storedValue = localStorage.getItem('isShortMovies');\r\n        if (storedValue === 'true') {\r\n            setIsShortMovies(true);\r\n        } else {\r\n            setIsShortMovies(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isShortMovies !== null) {\r\n            localStorage.setItem('isShortMovies', isShortMovies.toString());\r\n        }\r\n    }, [isShortMovies]);\r\n\r\n    useEffect(() => {\r\n        const storedMovies = JSON.parse(localStorage.getItem('allMovies'));\r\n        if (storedMovies) {\r\n            setSearched(true);\r\n            setAllMovies(storedMovies);\r\n\r\n            if (isShortMovies) {\r\n                const shortMovies = storedMovies.filter(({ duration }) => duration <= 40);\r\n                setShortMovies(shortMovies);\r\n                setRenderMovies(shortMovies);\r\n            } else {\r\n                setShortMovies([]);\r\n                setRenderMovies(storedMovies);\r\n            }\r\n        }\r\n    }, [isShortMovies]);\r\n\r\n    useEffect(() => {\r\n        mainApi.getMovies()\r\n            .then((data) => {\r\n                setSavedMovies(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                openPopupError(true);\r\n            });\r\n    }, [isShortMovies]);\r\n\r\n    useEffect(() => {\r\n        console.log(isShortMovies)\r\n    }, [isShortMovies]);\r\n\r\n    function findMovie(filter) {\r\n        setIsLoading(true);\r\n        moviesApi.getMovies()\r\n            .then((data) => {\r\n                let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\r\n                setAllMovies(filteredMovies);\r\n                setShortMovies(filteredMovies.filter(({ duration }) => duration <= 40))\r\n                localStorage.setItem('allMovies', JSON.stringify(filteredMovies));\r\n\r\n                if (isShortMovies === true) {\r\n                    setRenderMovies(allMovies)\r\n                } else {\r\n                    setRenderMovies(shortMovies)\r\n                }\r\n\r\n                setSearched(true);\r\n                //setExtraSearched(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(`${error}`);\r\n                openPopupError(true)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleCheckboxChange() {\r\n        setIsShortMovies(!isShortMovies);\r\n        if (isShortMovies === true) {\r\n            setRenderMovies(allMovies)\r\n        } else {\r\n            setRenderMovies(shortMovies)\r\n        }\r\n    }\r\n\r\n    function loadMoreMovies() {\r\n        let cardsToAdd = 4;\r\n        if (screenWidth <= 1150) {\r\n            cardsToAdd = 3;\r\n        }\r\n        if (screenWidth <= 1025) {\r\n            cardsToAdd = 2;\r\n        }\r\n        setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\r\n    }\r\n\r\n    function updateVisibleMovies() {\r\n        if (!isShortMovies) {\r\n            const moviesToShow = allMovies.slice(0, maxVisibleMovies);\r\n            return moviesToShow;\r\n        } else {\r\n            const moviesToShow = shortMovies.slice(0, maxVisibleMovies);\r\n            return moviesToShow;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searched) {\r\n            const updatedRenderMovies = updateVisibleMovies();\r\n            setRenderMovies(updatedRenderMovies);\r\n        }\r\n    }, [maxVisibleMovies, searched, isShortMovies, allMovies, shortMovies]);\r\n\r\n    return (\r\n        <main className=\"movies\">\r\n            <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\r\n            {isLoading ? (\r\n                <div className=\"preloader\">\r\n                    <span className=\"loader\"></span>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {searched && renderMovies.length === 0 ? (\r\n                        <p>Фильм не найден</p>\r\n                    ) : (\r\n                        <>\r\n                            {searched && <MoviesCardList movies={renderMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\r\n                            <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { moviesApi } from \"../../utils/MoviesApi\";\r\n// import SearchForm from \"../SearchForm/SearchForm\";\r\n// import MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\n// import { mainApi } from \"../../utils/MainApi\";\r\n\r\n// function Movies({ openPopupError }) {\r\n\r\n//     const [renderMovies, setRenderMovies] = useState([]);\r\n//     const [allMovies, setAllMovies] = useState([]);\r\n//     const [shortMovies, setShortMovies] = useState([]);\r\n//     const [maxVisibleMovies, setMaxVisibleMovies] = useState(() => {\r\n//         if (window.innerWidth <= 749) {\r\n//             return 5;\r\n//         } else if (window.innerWidth <= 1024) {\r\n//             return 8;\r\n//         } else if (window.innerWidth <= 1149) {\r\n//             return 15;\r\n//         } else {\r\n//             return 16;\r\n//         }\r\n//     });\r\n//     const [savedMovies, setSavedMovies] = useState([])\r\n//     const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n\r\n//     const [searched, setSearched] = useState(false);\r\n\r\n//     const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\r\n//     const [extraSearched, setExtraSearched] = useState(false)\r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         function handleResize() {\r\n//             setScreenWidth(window.innerWidth);\r\n//         }\r\n\r\n//         window.addEventListener('resize', handleResize);\r\n\r\n//         return () => {\r\n//             window.removeEventListener('resize', handleResize);\r\n//         };\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const storedValue = localStorage.getItem('isShortMovies');\r\n//         if (storedValue === 'true') {\r\n//             setIsShortMovies(true);\r\n//         } else {\r\n//             setIsShortMovies(false);\r\n//         }\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (isShortMovies !== null) {\r\n//             localStorage.setItem('isShortMovies', isShortMovies.toString());\r\n//         }\r\n//     }, [isShortMovies]);\r\n\r\n//     useEffect(() => {\r\n//         const storedMovies = JSON.parse(localStorage.getItem('allMovies'));\r\n//         if (storedMovies) {\r\n//             setSearched(true);\r\n//             setAllMovies(storedMovies);\r\n\r\n//             if (isShortMovies) {\r\n//                 const shortMovies = storedMovies.filter(({ duration }) => duration <= 40);\r\n//                 setShortMovies(shortMovies);\r\n//                 setRenderMovies(shortMovies);\r\n//             } else {\r\n//                 setShortMovies([]);\r\n//                 setRenderMovies(storedMovies);\r\n//             }\r\n//         }\r\n//     }, [isShortMovies]);\r\n\r\n//     useEffect(() => {\r\n//         mainApi.getMovies()\r\n//             .then((data) => {\r\n//                 setSavedMovies(data);\r\n//             })\r\n//             .catch((err) => {\r\n//                 console.log(err);\r\n//                 openPopupError(true);\r\n//             });\r\n//     }, [isShortMovies]);\r\n\r\n//     useEffect(() => {\r\n//         console.log(isShortMovies)\r\n//     }, [isShortMovies]);\r\n\r\n//     function findMovie(filter) {\r\n//         setIsLoading(true);\r\n//         moviesApi.getMovies()\r\n//             .then((data) => {\r\n//                 let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\r\n//                 setAllMovies(filteredMovies);\r\n//                 setShortMovies(filteredMovies.filter(({ duration }) => duration <= 40))\r\n//                 localStorage.setItem('allMovies', JSON.stringify(filteredMovies));\r\n\r\n//                 if (isShortMovies === true) {\r\n//                     setRenderMovies(allMovies)\r\n//                 } else {\r\n//                     setRenderMovies(shortMovies)\r\n//                 }\r\n\r\n//                 setSearched(true);\r\n//                 //setExtraSearched(true)\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(`${error}`);\r\n//                 openPopupError(true)\r\n//             })\r\n//             .finally(() => {\r\n//                 setIsLoading(false);\r\n//             })\r\n//     }\r\n\r\n//     function handleCheckboxChange() {\r\n//         setIsShortMovies(!isShortMovies);\r\n//         if (isShortMovies === true) {\r\n//             setRenderMovies(allMovies)\r\n//         } else {\r\n//             setRenderMovies(shortMovies)\r\n//         }\r\n//     }\r\n\r\n//     function loadMoreMovies() {\r\n//         let cardsToAdd = 4;\r\n//         if (screenWidth <= 1150) {\r\n//             cardsToAdd = 3;\r\n//         }\r\n//         if (screenWidth <= 1025) {\r\n//             cardsToAdd = 2;\r\n//         }\r\n//         setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\r\n//     }\r\n\r\n//     function updateVisibleMovies() {\r\n//         if (!isShortMovies) {\r\n//             const moviesToShow = allMovies.slice(0, maxVisibleMovies);\r\n//             return moviesToShow;\r\n//         } else {\r\n//             const moviesToShow = shortMovies.slice(0, maxVisibleMovies);\r\n//             return moviesToShow;\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         if (searched) {\r\n//             const updatedRenderMovies = updateVisibleMovies();\r\n//             setRenderMovies(updatedRenderMovies);\r\n//         }\r\n//     }, [maxVisibleMovies, searched, isShortMovies, allMovies, shortMovies]);\r\n\r\n//     return (\r\n//         <main className=\"movies\">\r\n//             <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\r\n//             {isLoading ? (\r\n//                 <div className=\"preloader\">\r\n//                     <span className=\"loader\"></span>\r\n//                 </div>\r\n//             ) : (\r\n//                 <>\r\n//                     {searched && renderMovies.length === 0 ? (\r\n//                         <p>Фильм не найден</p>\r\n//                     ) : (\r\n//                         <>\r\n//                             {searched && <MoviesCardList movies={renderMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\r\n//                             <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n//                         </>\r\n//                     )}\r\n//                 </>\r\n//             )}\r\n//         </main>\r\n//     );\r\n// }\r\n\r\n// export default Movies;\r\n"],"mappings":"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,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,gBAENrE,OAAA,CAAAE,SAAA;MAAA+D,QAAA,EACK3C,QAAQ,IAAIhB,YAAY,CAACgE,MAAM,KAAK,CAAC,gBAClCtE,OAAA;QAAAiE,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEtBrE,OAAA,CAAAE,SAAA;QAAA+D,QAAA,GACK3C,QAAQ,iBAAItB,OAAA,CAACH,cAAc;UAAC0E,MAAM,EAAEjE,YAAa;UAACU,WAAW,EAAEA,WAAY;UAACZ,cAAc,EAAEA;QAAe;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/GrE,OAAA;UAAQgE,SAAS,EAAC,wBAAwB;UAACQ,OAAO,EAAEf,cAAe;UAAAQ,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAClF;IACL,gBACH,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAAChE,EAAA,CA3KQF,MAAM;AAAAsE,EAAA,GAANtE,MAAM;AA6Kf,eAAeA,MAAM;;AAIrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}