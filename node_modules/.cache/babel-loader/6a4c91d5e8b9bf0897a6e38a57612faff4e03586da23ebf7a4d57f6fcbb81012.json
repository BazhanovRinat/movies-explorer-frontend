{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCard\\\\MoviesCard.js\",\n  _s = $RefreshSig$();\n// import testimage from '../../images/test-image.png';\n// import buttnNoLikeImage from '../../images/button-noLike__image.svg'\n// import deleteButton from '../../images/delete__button.svg'\n// import { Link, useLocation } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import buttonLikeImage from '../../images/button-like__image.svg'\n// import { mainApi } from \"../../utils/MainApi\";\n// import { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\n\n// function MoviesCard({ movie }) {\n\n//     const [isLiked, setIsLiked] = useState(false)\n//     const [likedMovies, setLikedMovies] = useState([]);\n\n//     const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\n\n//     function numberToTime(number) {\n//         const hours = Math.floor(number / 60);\n//         const minutes = number % 60;\n//         return `${hours}ч${minutes}м`;\n//     }\n\n//     function changeLikeState() {\n//       setIsLiked(!isLiked);\n\n//       // Если фильм лайкнут, добавьте его в список лайкнутых карточек\n//       if (!isLiked) {\n//         setLikedMovies([...likedMovies, movie]);\n//       } else {\n//         const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\n//         setLikedMovies(updatedLikedMovies);\n//       }\n//     }\n\n//     useEffect(() => {\n//       // Если isSaving становится true, значит, нужно отправить данные в mainApi\n//       if (isSaving) {\n//         mainApi.addMovie(movie)\n//           .then((response) => {\n//             // Обработка успешного сохранения\n//             console.log('Фильм успешно сохранен в mainApi');\n//           })\n//           .catch((error) => {\n//             // Обработка ошибки\n//             console.error('Ошибка при сохранении фильма:', error);\n//           })\n//           .finally(() => {\n//             setIsSaving(false); // Сбрасываем флаг после завершения запроса\n//           });\n//       }\n//     }, [isSaving]);\n\n//     useEffect(() => {\n//       // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\n//       setIsSaving(true);\n//     }, [likedMovies]);\n\n//     const { pathname } = useLocation()\n\n//     console.log(movie)\n\n//     return (\n//         <div className=\"moviesCard\">\n//             <Link to={movie.trailerLink} target=\"_blank\">\n//                 <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\n//             </Link>\n//             <div className=\"moviesCard__container\">\n//                 <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\n//                 {\n//                     pathname === \"/saved-movies\"\n//                         ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\n//                         : <button\n//                             className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\n//                                 alt=\"Изображение сердца\"></img></button>\n//                 }\n//             </div>\n//             <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\n//         </div>\n//     );\n// }\n\n// export default MoviesCard;\n\nimport testimage from '../../images/test-image.png';\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg';\nimport deleteButton from '../../images/delete__button.svg';\nimport { Link, useLocation } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport buttonLikeImage from '../../images/button-like__image.svg';\nimport { mainApi } from \"../../utils/MainApi\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesCard({\n  movie\n}) {\n  _s();\n  const [isLiked, setIsLiked] = useState(false);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\n  const profileData = React.useContext(CurrentUserContext);\n  function numberToTime(number) {\n    const hours = Math.floor(number / 60);\n    const minutes = number % 60;\n    return `${hours}ч${minutes}м`;\n  }\n  function changeLikeState() {\n    setIsLiked(!isLiked);\n\n    // Если фильм лайкнут, добавьте его в список лайкнутых карточек\n    if (!isLiked) {\n      console.log(movie);\n      setLikedMovies(movie);\n      mainApi.addMovie(movieDublicate).then(response => {\n        console.log('Фильм успешно добавлен', response);\n      }).catch(error => {\n        console.error('Ошибка при добавлении фильма', error);\n      });\n    } else {\n      const updatedLikedMovies = likedMovies.filter(likedMovie => likedMovie.id !== movie.id);\n      setLikedMovies(updatedLikedMovies);\n    }\n  }\n  const movieDublicate = {\n    image: 'https://api.nomoreparties.co' + movie.image.url,\n    trailerLink: movie.trailerLink,\n    thumbnail: 'https://api.nomoreparties.co' + movie.image.url,\n    movieId: movie.id,\n    country: movie.country || 'Неизвестно',\n    director: movie.director,\n    duration: movie.duration,\n    year: movie.year,\n    description: movie.description,\n    nameRU: movie.nameRU,\n    nameEN: movie.nameEN,\n    owner: profileData._id\n  };\n\n  // useEffect(() => {\n  //     // Если isSaving становится true, значит, нужно отправить данные в mainApi\n  //     if (isSaving) {\n  //         mainApi.addMovie(movieDublicate)\n  //             .then((response) => {\n  //                 // Обработка успешного сохранения\n  //                 console.log('Фильм успешно сохранен в mainApi');\n  //             })\n  //             .catch((error) => {\n  //                 // Обработка ошибки\n  //                 console.error('Ошибка при сохранении фильма:', error);\n  //             })\n  //             .finally(() => {\n  //                 setIsSaving(false); // Сбрасываем флаг после завершения запроса\n  //             });\n  //     }\n  // }, [isSaving]);\n\n  useEffect(() => {\n    // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\n    setIsSaving(true);\n  }, [likedMovies]);\n  const {\n    pathname\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesCard\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: movie.trailerLink,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moviesCard__image\",\n        src: `https://api.nomoreparties.co${movie.image.url}`,\n        alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moviesCard__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"moviesCard__name\",\n        children: movie.nameRU\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), pathname === \"/saved-movies\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteButton,\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: changeLikeState,\n          src: isLiked ? buttonLikeImage : buttnNoLikeImage,\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"moviesCard__movie-time\",\n      children: numberToTime(movie.duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(MoviesCard, \"5gJBVEpTzipe3aB7AjBJxGcMW5Y=\", false, function () {\n  return [useLocation];\n});\n_c = MoviesCard;\nexport default MoviesCard;\nvar _c;\n$RefreshReg$(_c, \"MoviesCard\");","map":{"version":3,"names":["testimage","buttnNoLikeImage","deleteButton","Link","useLocation","React","useEffect","useState","buttonLikeImage","mainApi","CurrentUserContext","jsxDEV","_jsxDEV","MoviesCard","movie","_s","isLiked","setIsLiked","likedMovies","setLikedMovies","isSaving","setIsSaving","profileData","useContext","numberToTime","number","hours","Math","floor","minutes","changeLikeState","console","log","addMovie","movieDublicate","then","response","catch","error","updatedLikedMovies","filter","likedMovie","id","image","url","trailerLink","thumbnail","movieId","country","director","duration","year","description","nameRU","nameEN","owner","_id","pathname","className","children","to","target","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/MoviesCard/MoviesCard.js"],"sourcesContent":["// import testimage from '../../images/test-image.png';\r\n// import buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\n// import deleteButton from '../../images/delete__button.svg'\r\n// import { Link, useLocation } from \"react-router-dom\";\r\n// import { useEffect, useState } from \"react\";\r\n// import buttonLikeImage from '../../images/button-like__image.svg'\r\n// import { mainApi } from \"../../utils/MainApi\";\r\n// import { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\n// function MoviesCard({ movie }) {\r\n\r\n//     const [isLiked, setIsLiked] = useState(false)\r\n//     const [likedMovies, setLikedMovies] = useState([]);\r\n\r\n//     const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\r\n\r\n//     function numberToTime(number) {\r\n//         const hours = Math.floor(number / 60);\r\n//         const minutes = number % 60;\r\n//         return `${hours}ч${minutes}м`;\r\n//     }\r\n\r\n//     function changeLikeState() {\r\n//       setIsLiked(!isLiked);\r\n\r\n//       // Если фильм лайкнут, добавьте его в список лайкнутых карточек\r\n//       if (!isLiked) {\r\n//         setLikedMovies([...likedMovies, movie]);\r\n//       } else {\r\n//         const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\r\n//         setLikedMovies(updatedLikedMovies);\r\n//       }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//       // Если isSaving становится true, значит, нужно отправить данные в mainApi\r\n//       if (isSaving) {\r\n//         mainApi.addMovie(movie)\r\n//           .then((response) => {\r\n//             // Обработка успешного сохранения\r\n//             console.log('Фильм успешно сохранен в mainApi');\r\n//           })\r\n//           .catch((error) => {\r\n//             // Обработка ошибки\r\n//             console.error('Ошибка при сохранении фильма:', error);\r\n//           })\r\n//           .finally(() => {\r\n//             setIsSaving(false); // Сбрасываем флаг после завершения запроса\r\n//           });\r\n//       }\r\n//     }, [isSaving]);\r\n\r\n//     useEffect(() => {\r\n//       // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\r\n//       setIsSaving(true);\r\n//     }, [likedMovies]);\r\n\r\n//     const { pathname } = useLocation()\r\n\r\n//     console.log(movie)\r\n\r\n//     return (\r\n//         <div className=\"moviesCard\">\r\n//             <Link to={movie.trailerLink} target=\"_blank\">\r\n//                 <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\r\n//             </Link>\r\n//             <div className=\"moviesCard__container\">\r\n//                 <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n//                 {\r\n//                     pathname === \"/saved-movies\"\r\n//                         ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\r\n//                         : <button\r\n//                             className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n//                                 alt=\"Изображение сердца\"></img></button>\r\n//                 }\r\n//             </div>\r\n//             <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MoviesCard;\r\n\r\n\r\nimport testimage from '../../images/test-image.png';\r\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\nimport deleteButton from '../../images/delete__button.svg'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport buttonLikeImage from '../../images/button-like__image.svg'\r\nimport { mainApi } from \"../../utils/MainApi\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nfunction MoviesCard({ movie }) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [likedMovies, setLikedMovies] = useState([]);\r\n\r\n    const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\r\n    const profileData = React.useContext(CurrentUserContext)\r\n\r\n    function numberToTime(number) {\r\n        const hours = Math.floor(number / 60);\r\n        const minutes = number % 60;\r\n        return `${hours}ч${minutes}м`;\r\n    }\r\n\r\n    function changeLikeState() {\r\n        setIsLiked(!isLiked);\r\n\r\n        // Если фильм лайкнут, добавьте его в список лайкнутых карточек\r\n        if (!isLiked) {\r\n            console.log(movie)\r\n            setLikedMovies(movie);\r\n            mainApi.addMovie(movieDublicate)\r\n                .then((response) => {\r\n                    console.log('Фильм успешно добавлен', response);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Ошибка при добавлении фильма', error);\r\n                });\r\n        } else {\r\n            const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\r\n            setLikedMovies(updatedLikedMovies);\r\n        }\r\n    }\r\n\r\n    const movieDublicate = {\r\n        image: 'https://api.nomoreparties.co' + movie.image.url,\r\n        trailerLink: movie.trailerLink,\r\n        thumbnail: 'https://api.nomoreparties.co' + movie.image.url,\r\n        movieId: movie.id,\r\n        country: movie.country || 'Неизвестно',\r\n        director: movie.director,\r\n        duration: movie.duration,\r\n        year: movie.year,\r\n        description: movie.description,\r\n        nameRU: movie.nameRU,\r\n        nameEN: movie.nameEN,\r\n        owner: profileData._id\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Если isSaving становится true, значит, нужно отправить данные в mainApi\r\n    //     if (isSaving) {\r\n    //         mainApi.addMovie(movieDublicate)\r\n    //             .then((response) => {\r\n    //                 // Обработка успешного сохранения\r\n    //                 console.log('Фильм успешно сохранен в mainApi');\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 // Обработка ошибки\r\n    //                 console.error('Ошибка при сохранении фильма:', error);\r\n    //             })\r\n    //             .finally(() => {\r\n    //                 setIsSaving(false); // Сбрасываем флаг после завершения запроса\r\n    //             });\r\n    //     }\r\n    // }, [isSaving]);\r\n\r\n    useEffect(() => {\r\n        // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\r\n        setIsSaving(true);\r\n    }, [likedMovies]);\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    return (\r\n        <div className=\"moviesCard\">\r\n            <Link to={movie.trailerLink} target=\"_blank\">\r\n                <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\r\n            </Link>\r\n            <div className=\"moviesCard__container\">\r\n                <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n                {\r\n                    pathname === \"/saved-movies\"\r\n                        ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\r\n                        : <button\r\n                            className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n                                alt=\"Изображение сердца\"></img></button>\r\n                }\r\n            </div>\r\n            <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}