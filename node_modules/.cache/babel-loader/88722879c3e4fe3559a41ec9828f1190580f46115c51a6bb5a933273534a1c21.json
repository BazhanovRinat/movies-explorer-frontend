{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { moviesApi } from \"../../utils/MoviesApi\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport { mainApi } from \"../../utils/MainApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movies({\n  openPopupError\n}) {\n  _s();\n  const [allMovies, setAllMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [visibleMovies, setVisibleMovies] = useState([]);\n  const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\n  const [searched, setSearched] = useState(false);\n  const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false;\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    const storedValue = localStorage.getItem('isShortMovies');\n    if (storedValue === 'true') {\n      setIsShortMovies(true);\n    } else {\n      setIsShortMovies(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (isShortMovies !== null) {\n      localStorage.setItem('isShortMovies', isShortMovies.toString());\n    }\n  }, [isShortMovies]);\n\n  // useEffect(() => {\n  //     const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\n  //     if (usersMovies) {\n  //         setAllMovies(usersMovies);\n  //         if (screenWidth < 1150) {\n  //             setMaxVisibleMovies(15);\n  //         }\n  //         if (screenWidth < 1044) {\n  //             setMaxVisibleMovies(8);\n  //         }\n  //         if (screenWidth < 750) {\n  //             setMaxVisibleMovies(5);\n  //         }\n\n  //         if (isShortMovies) {\n  //             const shortMovies = usersMovies.filter(({ duration }) => duration <= 40);\n  //             setFilteredMovies(shortMovies);\n  //         } else {\n  //             setFilteredMovies(usersMovies);\n  //         }\n  //         setSearched(true);\n  //         updateVisibleMovies();\n  //     }\n  //     mainApi.getMovies()\n  //         .then((data) => {\n  //             setSavedMovies(data);\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //             openPopupError(true);\n  //         });\n  // }, [isShortMovies]);\n\n  function findMovie(filter, isShortMovies) {\n    setIsLoading(true);\n    moviesApi.getMovies().then(data => {}).catch(error => {\n      console.log(`${error}`);\n      openPopupError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleCheckboxChange() {\n    setIsShortMovies(!isShortMovies);\n    if (!isShortMovies) {\n      setFilteredMovies(allMovies.filter(({\n        duration\n      }) => duration <= 40));\n    } else {\n      setFilteredMovies(allMovies);\n    }\n  }\n  function loadMoreMovies() {\n    let cardsToAdd = 4;\n    if (screenWidth <= 1150) {\n      cardsToAdd = 3;\n    }\n    if (screenWidth <= 1025) {\n      cardsToAdd = 2;\n    }\n    setMaxVisibleMovies(currentMaxVisibleMovies => currentMaxVisibleMovies + cardsToAdd);\n  }\n\n  // useEffect(() => {\n  //     if (searched) {\n  //         updateVisibleMovies();\n  //     }\n  // }, [filteredMovies, maxVisibleMovies, searched]);\n\n  // function updateVisibleMovies() {\n  //     const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\n  //     setVisibleMovies(moviesToShow);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      findMovie: findMovie,\n      handleCheckboxChange: handleCheckboxChange,\n      isShortMovies: isShortMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preloader\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [searched && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n        movies: visibleMovies,\n        savedMovies: savedMovies,\n        openPopupError: openPopupError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 34\n      }, this), searched && visibleMovies.length < filteredMovies.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"movies__moreMovies-btn\",\n        onClick: loadMoreMovies,\n        children: \"\\u0415\\u0449\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(Movies, \"tXa8eww9PVWln4aiDCmZnpUWzwQ=\");\n_c = Movies;\nexport default Movies;\n\n// import React, { useState, useEffect } from 'react';\n// import { moviesApi } from \"../../utils/MoviesApi\";\n// import SearchForm from \"../SearchForm/SearchForm\";\n// import MoviesCardList from \"../MoviesCardList/MoviesCardList\";\n// import { mainApi } from \"../../utils/MainApi\";\n\n// function Movies({ openPopupError }) {\n//     const [allMovies, setAllMovies] = useState([]);\n//     const [filteredMovies, setFilteredMovies] = useState([]);\n//     const [visibleMovies, setVisibleMovies] = useState([]);\n//     const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\n//     const [searched, setSearched] = useState(false);\n//     const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\n//     const [savedMovies, setSavedMovies] = useState([])\n//     const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n//     const [isLoading, setIsLoading] = useState(false);\n\n//     useEffect(() => {\n//         function handleResize() {\n//             setScreenWidth(window.innerWidth);\n//         }\n\n//         window.addEventListener('resize', handleResize);\n\n//         return () => {\n//             window.removeEventListener('resize', handleResize);\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         const storedValue = localStorage.getItem('isShortMovies');\n//         if (storedValue === 'true') {\n//             setIsShortMovies(true);\n//         } else {\n//             setIsShortMovies(false);\n//         }\n//     }, []);\n\n//     useEffect(() => {\n//         if (isShortMovies !== null) {\n//             localStorage.setItem('isShortMovies', isShortMovies.toString());\n//         }\n//     }, [isShortMovies]);\n\n//     // useEffect(() => {\n//     //     const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\n//     //     if (usersMovies) {\n//     //         setAllMovies(usersMovies);\n//     //         if (screenWidth < 1150) {\n//     //             setMaxVisibleMovies(15);\n//     //         }\n//     //         if (screenWidth < 1044) {\n//     //             setMaxVisibleMovies(8);\n//     //         }\n//     //         if (screenWidth < 750) {\n//     //             setMaxVisibleMovies(5);\n//     //         }\n\n//     //         if (isShortMovies) {\n//     //             const shortMovies = usersMovies.filter(({ duration }) => duration <= 40);\n//     //             setFilteredMovies(shortMovies);\n//     //         } else {\n//     //             setFilteredMovies(usersMovies);\n//     //         }\n//     //         setSearched(true);\n//     //         updateVisibleMovies();\n//     //     }\n//     //     mainApi.getMovies()\n//     //         .then((data) => {\n//     //             setSavedMovies(data);\n//     //         })\n//     //         .catch((err) => {\n//     //             console.log(err);\n//     //             openPopupError(true);\n//     //         });\n//     // }, [isShortMovies]);\n\n//     function findMovie(filter, isShortMovies) {\n//         setIsLoading(true);\n//         moviesApi.getMovies()\n//             .then((data) => {\n//                 let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\n//                 setVisibleMovies(filteredMovies);\n//                 localStorage.setItem('oldMovies', JSON.stringify(filteredMovies));\n//                 if (isShortMovies === true) {\n//                     filteredMovies = filteredMovies.filter(({ duration }) => duration <= 40);\n//                 }\n//                 setFilteredMovies(filteredMovies); //отрисовывается visableMovies значит надо повлиять на его данные при клике\n\n//                 if (isShortMovies) {\n//                     setFilteredMovies(filteredMovies);\n//                 } else {\n//                     setFilteredMovies(allMovies);\n//                 }\n\n//                 if (screenWidth < 1150) {\n//                     setMaxVisibleMovies(15);\n//                 }\n//                 if (screenWidth < 1044) {\n//                     setMaxVisibleMovies(8);\n//                 }\n//                 if (screenWidth < 750) {\n//                     setMaxVisibleMovies(5);\n//                 }\n\n//                 setSearched(true);\n//             })\n//             .catch((error) => {\n//                 console.log(`${error}`);\n//                 openPopupError(true)\n//             })\n//             .finally(() => {\n//                 setIsLoading(false);\n//             });\n//     }\n\n//     function handleCheckboxChange() {\n//         setIsShortMovies(!isShortMovies);\n//         if (!isShortMovies) {\n//             setFilteredMovies(allMovies.filter(({ duration }) => duration <= 40));\n//         } else {\n//             setFilteredMovies(allMovies);\n//         }\n//     }\n\n//     function loadMoreMovies() {\n//         let cardsToAdd = 4;\n//         if (screenWidth <= 1150) {\n//             cardsToAdd = 3;\n//         }\n//         if (screenWidth <= 1025) {\n//             cardsToAdd = 2;\n//         }\n//         setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\n//     }\n\n//     useEffect(() => {\n//         if (searched) {\n//             updateVisibleMovies();\n//         }\n//     }, [filteredMovies, maxVisibleMovies, searched]);\n\n//     function updateVisibleMovies() {\n//         const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\n//         setVisibleMovies(moviesToShow);\n//     }\n\n//     return (\n//         <main className=\"movies\">\n//             <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\n//             {isLoading ? (\n//                 <div className=\"preloader\">\n//                     <span className=\"loader\"></span>\n//                 </div>\n//             ) : (\n//                 <>\n//                     {searched && <MoviesCardList movies={visibleMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\n//                     {searched && visibleMovies.length < filteredMovies.length && (\n//                         <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\n//                     )}\n//                 </>\n//             )}\n//         </main>\n//     );\n// }\n\n// export default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","moviesApi","SearchForm","MoviesCardList","mainApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","openPopupError","_s","allMovies","setAllMovies","filteredMovies","setFilteredMovies","visibleMovies","setVisibleMovies","maxVisibleMovies","setMaxVisibleMovies","searched","setSearched","isShortMovies","setIsShortMovies","localStorage","getItem","savedMovies","setSavedMovies","screenWidth","setScreenWidth","window","innerWidth","isLoading","setIsLoading","handleResize","addEventListener","removeEventListener","storedValue","setItem","toString","findMovie","filter","getMovies","then","data","catch","error","console","log","finally","handleCheckboxChange","duration","loadMoreMovies","cardsToAdd","currentMaxVisibleMovies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { moviesApi } from \"../../utils/MoviesApi\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\nimport { mainApi } from \"../../utils/MainApi\";\r\n\r\nfunction Movies({ openPopupError }) {\r\n    const [allMovies, setAllMovies] = useState([]);\r\n    const [filteredMovies, setFilteredMovies] = useState([]);\r\n    const [visibleMovies, setVisibleMovies] = useState([]);\r\n    const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\r\n    const [searched, setSearched] = useState(false);\r\n    const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\r\n    const [savedMovies, setSavedMovies] = useState([])\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storedValue = localStorage.getItem('isShortMovies');\r\n        if (storedValue === 'true') {\r\n            setIsShortMovies(true);\r\n        } else {\r\n            setIsShortMovies(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isShortMovies !== null) {\r\n            localStorage.setItem('isShortMovies', isShortMovies.toString());\r\n        }\r\n    }, [isShortMovies]);\r\n\r\n    // useEffect(() => {\r\n    //     const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\r\n    //     if (usersMovies) {\r\n    //         setAllMovies(usersMovies);\r\n    //         if (screenWidth < 1150) {\r\n    //             setMaxVisibleMovies(15);\r\n    //         }\r\n    //         if (screenWidth < 1044) {\r\n    //             setMaxVisibleMovies(8);\r\n    //         }\r\n    //         if (screenWidth < 750) {\r\n    //             setMaxVisibleMovies(5);\r\n    //         }\r\n\r\n    //         if (isShortMovies) {\r\n    //             const shortMovies = usersMovies.filter(({ duration }) => duration <= 40);\r\n    //             setFilteredMovies(shortMovies);\r\n    //         } else {\r\n    //             setFilteredMovies(usersMovies);\r\n    //         }\r\n    //         setSearched(true);\r\n    //         updateVisibleMovies();\r\n    //     }\r\n    //     mainApi.getMovies()\r\n    //         .then((data) => {\r\n    //             setSavedMovies(data);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //             openPopupError(true);\r\n    //         });\r\n    // }, [isShortMovies]);\r\n\r\n    function findMovie(filter, isShortMovies) {\r\n        setIsLoading(true);\r\n        moviesApi.getMovies()\r\n            .then((data) => {\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(`${error}`);\r\n                openPopupError(true)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleCheckboxChange() {\r\n        setIsShortMovies(!isShortMovies);\r\n        if (!isShortMovies) {\r\n            setFilteredMovies(allMovies.filter(({ duration }) => duration <= 40));\r\n        } else {\r\n            setFilteredMovies(allMovies);\r\n        }\r\n    }\r\n\r\n    function loadMoreMovies() {\r\n        let cardsToAdd = 4;\r\n        if (screenWidth <= 1150) {\r\n            cardsToAdd = 3;\r\n        }\r\n        if (screenWidth <= 1025) {\r\n            cardsToAdd = 2;\r\n        }\r\n        setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (searched) {\r\n    //         updateVisibleMovies();\r\n    //     }\r\n    // }, [filteredMovies, maxVisibleMovies, searched]);\r\n\r\n    // function updateVisibleMovies() {\r\n    //     const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\r\n    //     setVisibleMovies(moviesToShow);\r\n    // }\r\n\r\n    return (\r\n        <main className=\"movies\">\r\n            <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\r\n            {isLoading ? (\r\n                <div className=\"preloader\">\r\n                    <span className=\"loader\"></span>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {searched && <MoviesCardList movies={visibleMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\r\n                    {searched && visibleMovies.length < filteredMovies.length && (\r\n                        <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n                    )}\r\n                </>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\n export default Movies;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { moviesApi } from \"../../utils/MoviesApi\";\r\n// import SearchForm from \"../SearchForm/SearchForm\";\r\n// import MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\n// import { mainApi } from \"../../utils/MainApi\";\r\n\r\n// function Movies({ openPopupError }) {\r\n//     const [allMovies, setAllMovies] = useState([]);\r\n//     const [filteredMovies, setFilteredMovies] = useState([]);\r\n//     const [visibleMovies, setVisibleMovies] = useState([]);\r\n//     const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\r\n//     const [searched, setSearched] = useState(false);\r\n//     const [isShortMovies, setIsShortMovies] = useState(localStorage.getItem('isShortMovies')) || false\r\n//     const [savedMovies, setSavedMovies] = useState([])\r\n//     const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         function handleResize() {\r\n//             setScreenWidth(window.innerWidth);\r\n//         }\r\n\r\n//         window.addEventListener('resize', handleResize);\r\n\r\n//         return () => {\r\n//             window.removeEventListener('resize', handleResize);\r\n//         };\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const storedValue = localStorage.getItem('isShortMovies');\r\n//         if (storedValue === 'true') {\r\n//             setIsShortMovies(true);\r\n//         } else {\r\n//             setIsShortMovies(false);\r\n//         }\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (isShortMovies !== null) {\r\n//             localStorage.setItem('isShortMovies', isShortMovies.toString());\r\n//         }\r\n//     }, [isShortMovies]);\r\n\r\n//     // useEffect(() => {\r\n//     //     const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\r\n//     //     if (usersMovies) {\r\n//     //         setAllMovies(usersMovies);\r\n//     //         if (screenWidth < 1150) {\r\n//     //             setMaxVisibleMovies(15);\r\n//     //         }\r\n//     //         if (screenWidth < 1044) {\r\n//     //             setMaxVisibleMovies(8);\r\n//     //         }\r\n//     //         if (screenWidth < 750) {\r\n//     //             setMaxVisibleMovies(5);\r\n//     //         }\r\n\r\n//     //         if (isShortMovies) {\r\n//     //             const shortMovies = usersMovies.filter(({ duration }) => duration <= 40);\r\n//     //             setFilteredMovies(shortMovies);\r\n//     //         } else {\r\n//     //             setFilteredMovies(usersMovies);\r\n//     //         }\r\n//     //         setSearched(true);\r\n//     //         updateVisibleMovies();\r\n//     //     }\r\n//     //     mainApi.getMovies()\r\n//     //         .then((data) => {\r\n//     //             setSavedMovies(data);\r\n//     //         })\r\n//     //         .catch((err) => {\r\n//     //             console.log(err);\r\n//     //             openPopupError(true);\r\n//     //         });\r\n//     // }, [isShortMovies]);\r\n\r\n//     function findMovie(filter, isShortMovies) {\r\n//         setIsLoading(true);\r\n//         moviesApi.getMovies()\r\n//             .then((data) => {\r\n//                 let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\r\n//                 setVisibleMovies(filteredMovies);\r\n//                 localStorage.setItem('oldMovies', JSON.stringify(filteredMovies));\r\n//                 if (isShortMovies === true) {\r\n//                     filteredMovies = filteredMovies.filter(({ duration }) => duration <= 40);\r\n//                 }\r\n//                 setFilteredMovies(filteredMovies); //отрисовывается visableMovies значит надо повлиять на его данные при клике\r\n\r\n\r\n//                 if (isShortMovies) {\r\n//                     setFilteredMovies(filteredMovies);\r\n//                 } else {\r\n//                     setFilteredMovies(allMovies);\r\n//                 }\r\n\r\n//                 if (screenWidth < 1150) {\r\n//                     setMaxVisibleMovies(15);\r\n//                 }\r\n//                 if (screenWidth < 1044) {\r\n//                     setMaxVisibleMovies(8);\r\n//                 }\r\n//                 if (screenWidth < 750) {\r\n//                     setMaxVisibleMovies(5);\r\n//                 }\r\n\r\n//                 setSearched(true);\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(`${error}`);\r\n//                 openPopupError(true)\r\n//             })\r\n//             .finally(() => {\r\n//                 setIsLoading(false);\r\n//             });\r\n//     }\r\n\r\n//     function handleCheckboxChange() {\r\n//         setIsShortMovies(!isShortMovies);\r\n//         if (!isShortMovies) {\r\n//             setFilteredMovies(allMovies.filter(({ duration }) => duration <= 40));\r\n//         } else {\r\n//             setFilteredMovies(allMovies);\r\n//         }\r\n//     }\r\n\r\n//     function loadMoreMovies() {\r\n//         let cardsToAdd = 4;\r\n//         if (screenWidth <= 1150) {\r\n//             cardsToAdd = 3;\r\n//         }\r\n//         if (screenWidth <= 1025) {\r\n//             cardsToAdd = 2;\r\n//         }\r\n//         setMaxVisibleMovies((currentMaxVisibleMovies) => currentMaxVisibleMovies + cardsToAdd);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         if (searched) {\r\n//             updateVisibleMovies();\r\n//         }\r\n//     }, [filteredMovies, maxVisibleMovies, searched]);\r\n\r\n//     function updateVisibleMovies() {\r\n//         const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\r\n//         setVisibleMovies(moviesToShow);\r\n//     }\r\n\r\n//     return (\r\n//         <main className=\"movies\">\r\n//             <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\r\n//             {isLoading ? (\r\n//                 <div className=\"preloader\">\r\n//                     <span className=\"loader\"></span>\r\n//                 </div>\r\n//             ) : (\r\n//                 <>\r\n//                     {searched && <MoviesCardList movies={visibleMovies} savedMovies={savedMovies} openPopupError={openPopupError} />}\r\n//                     {searched && visibleMovies.length < filteredMovies.length && (\r\n//                         <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n//                     )}\r\n//                 </>\r\n//             )}\r\n//         </main>\r\n//     );\r\n// }\r\n\r\n// export default Movies;"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}