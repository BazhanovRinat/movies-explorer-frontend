{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { moviesApi } from \"../../utils/MoviesApi\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [allMovies, setAllMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [visibleMovies, setVisibleMovies] = useState([]);\n  const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\n  const [searched, setSearched] = useState(false);\n  const [isShortMovies, setIsShortMovies] = useState(false);\n  const screenWidth = window.innerWidth;\n  useEffect(() => {\n    const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\n    if (usersMovies) {\n      setAllMovies(usersMovies);\n      setFilteredMovies(usersMovies);\n      setSearched(true);\n      updateVisibleMovies();\n    }\n  }, []);\n  function findMovie(filter, isShortMovies) {\n    // Вместо загрузки всех фильмов и фильтрации на клиентской стороне,\n    // отправляем запрос с параметрами поиска и длительности на сервер.\n    moviesApi.getMovies(filter, isShortMovies).then(data => {\n      setAllMovies(data);\n      localStorage.setItem('oldMovies', JSON.stringify(data));\n      setFilteredMovies(data);\n      if (screenWidth <= 1150) {\n        setMaxVisibleMovies(15);\n      } else {\n        setMaxVisibleMovies(16);\n      }\n      setSearched(true);\n    }).catch(error => {\n      console.log(`${error}`);\n    });\n  }\n  function handleCheckboxChange() {\n    setIsShortMovies(!isShortMovies);\n    if (!isShortMovies) {\n      setFilteredMovies(allMovies.filter(({\n        duration\n      }) => duration <= 40));\n    } else {\n      setFilteredMovies(allMovies);\n    }\n  }\n  function loadMoreMovies() {\n    let cardsToAdd = 4;\n    if (screenWidth <= 1150) {\n      cardsToAdd = 3;\n    }\n    if (screenWidth <= 480) {\n      cardsToAdd = 2;\n    }\n    setMaxVisibleMovies(currentMaxVisibleMovies => currentMaxVisibleMovies + cardsToAdd);\n  }\n  useEffect(() => {\n    if (searched) {\n      updateVisibleMovies();\n    }\n  }, [filteredMovies, maxVisibleMovies, searched]);\n  function updateVisibleMovies() {\n    const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\n    setVisibleMovies(moviesToShow);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      findMovie: findMovie,\n      handleCheckboxChange: handleCheckboxChange,\n      isShortMovies: isShortMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), searched && filteredMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0424\\u0438\\u043B\\u044C\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [searched && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n        movies: visibleMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this), searched && visibleMovies.length < filteredMovies.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"movies__moreMovies-btn\",\n        onClick: loadMoreMovies,\n        children: \"\\u0415\\u0449\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n_s(Movies, \"s1a3MKvVicYRcfQMrTUiLUCwhts=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","moviesApi","SearchForm","MoviesCardList","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","allMovies","setAllMovies","filteredMovies","setFilteredMovies","visibleMovies","setVisibleMovies","maxVisibleMovies","setMaxVisibleMovies","searched","setSearched","isShortMovies","setIsShortMovies","screenWidth","window","innerWidth","usersMovies","JSON","parse","localStorage","getItem","updateVisibleMovies","findMovie","filter","getMovies","then","data","setItem","stringify","catch","error","console","log","handleCheckboxChange","duration","loadMoreMovies","cardsToAdd","currentMaxVisibleMovies","moviesToShow","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { moviesApi } from \"../../utils/MoviesApi\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\n\r\nfunction Movies() {\r\n    const [allMovies, setAllMovies] = useState([]);\r\n    const [filteredMovies, setFilteredMovies] = useState([]);\r\n    const [visibleMovies, setVisibleMovies] = useState([]);\r\n    const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\r\n    const [searched, setSearched] = useState(false);\r\n    const [isShortMovies, setIsShortMovies] = useState(false);\r\n  \r\n    const screenWidth = window.innerWidth;\r\n  \r\n    useEffect(() => {\r\n      const usersMovies = JSON.parse(localStorage.getItem('oldMovies'));\r\n      if (usersMovies) {\r\n        setAllMovies(usersMovies);\r\n        setFilteredMovies(usersMovies);\r\n        setSearched(true);\r\n        updateVisibleMovies();\r\n      }\r\n    }, []);\r\n  \r\n    function findMovie(filter, isShortMovies) {\r\n      // Вместо загрузки всех фильмов и фильтрации на клиентской стороне,\r\n      // отправляем запрос с параметрами поиска и длительности на сервер.\r\n      moviesApi.getMovies(filter, isShortMovies)\r\n        .then((data) => {\r\n          setAllMovies(data);\r\n          localStorage.setItem('oldMovies', JSON.stringify(data));\r\n          setFilteredMovies(data);\r\n          if (screenWidth <= 1150) {\r\n            setMaxVisibleMovies(15);\r\n          } else {\r\n            setMaxVisibleMovies(16);\r\n          }\r\n          setSearched(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(`${error}`);\r\n        });\r\n    }\r\n  \r\n    function handleCheckboxChange() {\r\n      setIsShortMovies(!isShortMovies);\r\n      if (!isShortMovies) {\r\n        setFilteredMovies(allMovies.filter(({ duration }) => duration <= 40));\r\n      } else {\r\n        setFilteredMovies(allMovies);\r\n      }\r\n    }\r\n  \r\n    function loadMoreMovies() {\r\n      let cardsToAdd = 4;\r\n      if (screenWidth <= 1150) {\r\n        cardsToAdd = 3;\r\n      }\r\n      if (screenWidth <= 480) {\r\n        cardsToAdd = 2;\r\n      }\r\n      setMaxVisibleMovies(currentMaxVisibleMovies => currentMaxVisibleMovies + cardsToAdd);\r\n    }\r\n  \r\n    useEffect(() => {\r\n      if (searched) {\r\n        updateVisibleMovies();\r\n      }\r\n    }, [filteredMovies, maxVisibleMovies, searched]);\r\n  \r\n    function updateVisibleMovies() {\r\n      const moviesToShow = filteredMovies.slice(0, maxVisibleMovies);\r\n      setVisibleMovies(moviesToShow);\r\n    }\r\n  \r\n    return (\r\n      <main className=\"movies\">\r\n        <SearchForm findMovie={findMovie} handleCheckboxChange={handleCheckboxChange} isShortMovies={isShortMovies} />\r\n        {searched && filteredMovies.length === 0 ? (\r\n          <p>Фильм не найден</p>\r\n        ) : (\r\n          <>\r\n            {searched && <MoviesCardList movies={visibleMovies} />}\r\n            {searched && visibleMovies.length < filteredMovies.length && (\r\n              <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n            )}\r\n          </>\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n  \r\n  export default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}