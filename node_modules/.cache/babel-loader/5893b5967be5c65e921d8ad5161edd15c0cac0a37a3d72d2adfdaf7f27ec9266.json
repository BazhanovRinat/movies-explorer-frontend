{"ast":null,"code":"export default class MainApi{constructor(data){this.url=data.url;this.headers=data.headers;}_request(url,options){return fetch(url,options).then(this._checkResponse);}_checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}setToken(token){this.headers['Authorization']=\"Bearer \".concat(token);}getMovies(){return this._request(\"\".concat(this.url,\"/movies\"),{method:'GET',headers:this.headers});}addMovie(item){return this._request(\"\".concat(this.url,\"/movies\"),{method:\"POST\",headers:this.headers,body:JSON.stringify(item)});}deleteMovie(movieId){return this._request(\"\".concat(this.url,\"/movies/\").concat(movieId),{method:\"DELETE\",headers:this.headers});}setProfileInfo(item){return this._request(\"\".concat(this.url,\"/users/me\"),{method:\"PATCH\",headers:this.headers,body:JSON.stringify({name:item.name,email:item.email})});}profileDataInstall(){return this._request(\"\".concat(this.url,\"/users/me\"),{headers:this.headers});}}const token=localStorage.getItem('token');export const mainApi=new MainApi({url:'https://api.bazhanov.rinat.diplom.nomoredomainsrocks.ru',// url: 'http://localhost:3001/',\nheaders:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},credentials:'include'});","map":{"version":3,"names":["MainApi","constructor","data","url","headers","_request","options","fetch","then","_checkResponse","res","ok","json","Promise","reject","concat","status","setToken","token","getMovies","method","addMovie","item","body","JSON","stringify","deleteMovie","movieId","setProfileInfo","name","email","profileDataInstall","localStorage","getItem","mainApi","credentials"],"sources":["C:/Users/79267/desktop/praktikum/dev/movies-explorer-frontend-no-api/src/utils/MainApi.js"],"sourcesContent":["export default class MainApi {\r\n    constructor(data) {\r\n        this.url = data.url;\r\n        this.headers = data.headers;\r\n    }\r\n\r\n    _request(url, options) {\r\n        return fetch(url, options).then(this._checkResponse)\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    setToken(token) {\r\n        this.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    getMovies() {\r\n        return this._request(`${this.url}/movies`, {\r\n            method: 'GET',\r\n            headers: this.headers,\r\n        })\r\n    }\r\n\r\n    addMovie(item) {\r\n        return this._request(`${this.url}/movies`, {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            body: JSON.stringify(item)\r\n        })\r\n    }\r\n\r\n    deleteMovie(movieId) {\r\n        return this._request(`${this.url}/movies/${movieId}`, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n        })\r\n    }\r\n\r\n    setProfileInfo(item) {\r\n        return this._request(`${this.url}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: item.name,\r\n                email: item.email\r\n            })\r\n        })\r\n    }\r\n\r\n    profileDataInstall() {\r\n        return this._request(`${this.url}/users/me`, {\r\n            headers: this.headers,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const mainApi = new MainApi({\r\n    url: 'https://api.bazhanov.rinat.diplom.nomoredomainsrocks.ru',\r\n    // url: 'http://localhost:3001/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n    },\r\n    credentials: 'include',\r\n})"],"mappings":"AAAA,cAAe,MAAM,CAAAA,OAAQ,CACzBC,WAAWA,CAACC,IAAI,CAAE,CACd,IAAI,CAACC,GAAG,CAAGD,IAAI,CAACC,GAAG,CACnB,IAAI,CAACC,OAAO,CAAGF,IAAI,CAACE,OAAO,CAC/B,CAEAC,QAAQA,CAACF,GAAG,CAAEG,OAAO,CAAE,CACnB,MAAO,CAAAC,KAAK,CAACJ,GAAG,CAAEG,OAAO,CAAC,CAACE,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CACxD,CAEAA,cAAcA,CAACC,GAAG,CAAE,CAChB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACR,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACrB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CAClD,CAEAC,QAAQA,CAACC,KAAK,CAAE,CACZ,IAAI,CAACd,OAAO,CAAC,eAAe,CAAC,WAAAW,MAAA,CAAaG,KAAK,CAAE,CACrD,CAEAC,SAASA,CAAA,CAAG,CACR,MAAO,KAAI,CAACd,QAAQ,IAAAU,MAAA,CAAI,IAAI,CAACZ,GAAG,YAAW,CACvCiB,MAAM,CAAE,KAAK,CACbhB,OAAO,CAAE,IAAI,CAACA,OAClB,CAAC,CAAC,CACN,CAEAiB,QAAQA,CAACC,IAAI,CAAE,CACX,MAAO,KAAI,CAACjB,QAAQ,IAAAU,MAAA,CAAI,IAAI,CAACZ,GAAG,YAAW,CACvCiB,MAAM,CAAE,MAAM,CACdhB,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBmB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAC7B,CAAC,CAAC,CACN,CAEAI,WAAWA,CAACC,OAAO,CAAE,CACjB,MAAO,KAAI,CAACtB,QAAQ,IAAAU,MAAA,CAAI,IAAI,CAACZ,GAAG,aAAAY,MAAA,CAAWY,OAAO,EAAI,CAClDP,MAAM,CAAE,QAAQ,CAChBhB,OAAO,CAAE,IAAI,CAACA,OAClB,CAAC,CAAC,CACN,CAEAwB,cAAcA,CAACN,IAAI,CAAE,CACjB,MAAO,KAAI,CAACjB,QAAQ,IAAAU,MAAA,CAAI,IAAI,CAACZ,GAAG,cAAa,CACzCiB,MAAM,CAAE,OAAO,CACfhB,OAAO,CAAE,IAAI,CAACA,OAAO,CACrBmB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBI,IAAI,CAAEP,IAAI,CAACO,IAAI,CACfC,KAAK,CAAER,IAAI,CAACQ,KAChB,CAAC,CACL,CAAC,CAAC,CACN,CAEAC,kBAAkBA,CAAA,CAAG,CACjB,MAAO,KAAI,CAAC1B,QAAQ,IAAAU,MAAA,CAAI,IAAI,CAACZ,GAAG,cAAa,CACzCC,OAAO,CAAE,IAAI,CAACA,OAClB,CAAC,CAAC,CACN,CAEJ,CAEA,KAAM,CAAAc,KAAK,CAAGc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,MAAO,MAAM,CAAAC,OAAO,CAAG,GAAI,CAAAlC,OAAO,CAAC,CAC/BG,GAAG,CAAE,yDAAyD,CAC9D;AACAC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAW,MAAA,CAAYG,KAAK,CACpC,CAAC,CACDiB,WAAW,CAAE,SACjB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}