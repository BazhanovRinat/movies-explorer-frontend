{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCard\\\\MoviesCard.js\",\n  _s = $RefreshSig$();\nimport testimage from '../../images/test-image.png';\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg';\nimport deleteButton from '../../images/delete__button.svg';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport buttonLikeImage from '../../images/button-like__image.svg';\nimport { mainApi } from \"../../utils/MainApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesCard({\n  movie\n}) {\n  _s();\n  const [isLiked, setIsLiked] = useState(false);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\n\n  function numberToTime(number) {\n    const hours = Math.floor(number / 60);\n    const minutes = number % 60;\n    return `${hours}ч${minutes}м`;\n  }\n  function changeLikeState() {\n    setIsLiked(!isLiked);\n\n    // Если фильм лайкнут, добавьте его в список лайкнутых карточек\n    if (!isLiked) {\n      setLikedMovies([...likedMovies, movie]);\n    } else {\n      const updatedLikedMovies = likedMovies.filter(likedMovie => likedMovie.id !== movie.id);\n      setLikedMovies(updatedLikedMovies);\n    }\n  }\n  useEffect(() => {\n    // Если isSaving становится true, значит, нужно отправить данные в mainApi\n    if (isSaving) {\n      mainApi.addMovie(movie).then(response => {\n        // Обработка успешного сохранения\n        console.log('Фильм успешно сохранен в mainApi');\n      }).catch(error => {\n        // Обработка ошибки\n        console.error('Ошибка при сохранении фильма:', error);\n      }).finally(() => {\n        setIsSaving(false); // Сбрасываем флаг после завершения запроса\n      });\n    }\n  }, [isSaving]);\n  useEffect(() => {\n    // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\n    setIsSaving(true);\n  }, [likedMovies]);\n  const {\n    pathname\n  } = useLocation();\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesCard\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: movie.trailerLink,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moviesCard__image\",\n        src: `https://api.nomoreparties.co${movie.image.url}`,\n        alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moviesCard__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"moviesCard__name\",\n        children: movie.nameRU\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), pathname === \"/saved-movies\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteButton,\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moviesCard__button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: changeLikeState,\n          src: isLiked ? buttonLikeImage : buttnNoLikeImage,\n          alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"moviesCard__movie-time\",\n      children: numberToTime(movie.duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(MoviesCard, \"QSZN2nolBHHaJsc8AE5vOmcr2G0=\", false, function () {\n  return [useLocation];\n});\n_c = MoviesCard;\nexport default MoviesCard;\nvar _c;\n$RefreshReg$(_c, \"MoviesCard\");","map":{"version":3,"names":["testimage","buttnNoLikeImage","deleteButton","Link","useLocation","useState","buttonLikeImage","mainApi","jsxDEV","_jsxDEV","MoviesCard","movie","_s","isLiked","setIsLiked","likedMovies","setLikedMovies","isSaving","setIsSaving","numberToTime","number","hours","Math","floor","minutes","changeLikeState","updatedLikedMovies","filter","likedMovie","id","useEffect","addMovie","then","response","console","log","catch","error","finally","pathname","className","children","to","trailerLink","target","src","image","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","nameRU","onClick","duration","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/MoviesCard/MoviesCard.js"],"sourcesContent":["import testimage from '../../images/test-image.png';\r\nimport buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\nimport deleteButton from '../../images/delete__button.svg'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport buttonLikeImage from '../../images/button-like__image.svg'\r\nimport { mainApi } from \"../../utils/MainApi\";\r\n\r\nfunction MoviesCard({ movie }) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [likedMovies, setLikedMovies] = useState([]);\r\n\r\n    const [isSaving, setIsSaving] = useState(false); // Флаг для отслеживания сохранения данных\r\n\r\n    function numberToTime(number) {\r\n        const hours = Math.floor(number / 60);\r\n        const minutes = number % 60;\r\n        return `${hours}ч${minutes}м`;\r\n    }\r\n\r\n    function changeLikeState() {\r\n      setIsLiked(!isLiked);\r\n  \r\n      // Если фильм лайкнут, добавьте его в список лайкнутых карточек\r\n      if (!isLiked) {\r\n        setLikedMovies([...likedMovies, movie]);\r\n      } else {\r\n        const updatedLikedMovies = likedMovies.filter((likedMovie) => likedMovie.id !== movie.id);\r\n        setLikedMovies(updatedLikedMovies);\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      // Если isSaving становится true, значит, нужно отправить данные в mainApi\r\n      if (isSaving) {\r\n        mainApi.addMovie(movie)\r\n          .then((response) => {\r\n            // Обработка успешного сохранения\r\n            console.log('Фильм успешно сохранен в mainApi');\r\n          })\r\n          .catch((error) => {\r\n            // Обработка ошибки\r\n            console.error('Ошибка при сохранении фильма:', error);\r\n          })\r\n          .finally(() => {\r\n            setIsSaving(false); // Сбрасываем флаг после завершения запроса\r\n          });\r\n      }\r\n    }, [isSaving]);\r\n  \r\n    useEffect(() => {\r\n      // Если состояние likedMovies изменяется, устанавливаем флаг isSaving для отправки данных в mainApi\r\n      setIsSaving(true);\r\n    }, [likedMovies]);\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    console.log(movie)\r\n\r\n    return (\r\n        <div className=\"moviesCard\">\r\n            <Link to={movie.trailerLink} target=\"_blank\">\r\n                <img className=\"moviesCard__image\" src={`https://api.nomoreparties.co${movie.image.url}`} alt=\"Изображение фильма\"></img>\r\n            </Link>\r\n            <div className=\"moviesCard__container\">\r\n                <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n                {\r\n                    pathname === \"/saved-movies\"\r\n                        ? <button className=\"moviesCard__button\"><img src={deleteButton} alt=\"Изображение сердца\"></img></button>\r\n                        : <button\r\n                            className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n                                alt=\"Изображение сердца\"></img></button>\r\n                }\r\n            </div>\r\n            <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}