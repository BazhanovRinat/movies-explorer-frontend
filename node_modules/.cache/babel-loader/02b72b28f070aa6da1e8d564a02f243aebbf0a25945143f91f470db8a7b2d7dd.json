{"ast":null,"code":"import _toConsumableArray from\"C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend-no-api/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend-no-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import buttnNoLikeImage from'../../images/button-noLike__image.svg';import deleteButton from'../../images/delete__button.svg';import{Link,useLocation}from\"react-router-dom\";import React,{useEffect,useState}from\"react\";import buttonLikeImage from'../../images/button-like__image.svg';import{mainApi}from\"../../utils/MainApi\";import{CurrentUserContext}from\"../../contexts/CurrentUserContext\";import{UsersMovies}from\"../../contexts/UsersMovies\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MoviesCard(_ref){var movie=_ref.movie,savedMovies=_ref.savedMovies,openPopupError=_ref.openPopupError,updateMoviesList=_ref.updateMoviesList,handleUpdateUsersMovies=_ref.handleUpdateUsersMovies;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLiked=_useState2[0],setIsLiked=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),likedMovies=_useState4[0],setLikedMovies=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),movieDelete=_useState6[0],setMovieDelete=_useState6[1];var addedMovies=React.useContext(UsersMovies);var profileData=React.useContext(CurrentUserContext);useEffect(function(){if(savedMovies&&savedMovies.length>0){var _likedMovies=savedMovies.some(function(item){return item.movieId===movie.id;});if(_likedMovies){setIsLiked(true);}}},[movie.id,savedMovies]);function numberToTime(number){var hours=Math.floor(number/60);var minutes=number%60;return\"\".concat(hours,\"\\u0447\").concat(minutes,\"\\u043C\");}function changeLikeState(){setIsLiked(!isLiked);var movieDublicate={image:\"https://api.nomoreparties.co\".concat(movie.image.url),trailerLink:movie.trailerLink,thumbnail:'https://api.nomoreparties.co'+movie.image.url,movieId:movie.id,country:movie.country,director:movie.director,duration:movie.duration,year:movie.year,description:movie.description,nameRU:movie.nameRU,nameEN:movie.nameEN,owner:profileData._id};if(!isLiked){//setLikedMovies(prevLikedMovies => [...prevLikedMovies, movieDublicate]);\nhandleUpdateUsersMovies(function(prevLikedMovies){return[].concat(_toConsumableArray(prevLikedMovies),[movieDublicate]);});// mainApi.addMovie(movieDublicate)\n// .then((res) => {\n//     console.log('Фильм успешно добавлен');\n// })\n// .catch((error) => {\n//     console.log('Ошибка при добавлении фильма');\n//     openPopupError(true)\n// });\n}else{// mainApi.getMovies()\n//     .then(async (data) => {\n//         const isMovieInData = data.find(item => item.movieId === movieDublicate.movieId);\n//         if (isMovieInData) {\n//             await mainApi.deleteMovie(isMovieInData._id);\n//             setLikedMovies(prevLikedMovies => prevLikedMovies.filter(item => item.movieId !== isMovieInData.movieId));\n//             console.log('Фильм успешно удален');\n//         }\n//     })\n//     .catch((error) => {\n//         console.log(error);\n//         openPopupError(true)\n//     });\nvar isMovieInData=addedMovies.find(function(item){return item.movieId===movieDublicate.movieId;});if(isMovieInData){handleUpdateUsersMovies(function(prevLikedMovies){return prevLikedMovies.filter(function(item){return item.movieId!==isMovieInData.movieId;});});console.log('Фильм успешно удален');}}}function deleteMovie(movie){// console.log(movie);\n// mainApi.deleteMovie(movie._id)\n//     .then((res) => {\n//         updateMoviesList(movie)\n//         console.log('Фильм успешно удален');\n//     })\n//     .catch((error) => {\n//         console.log('Ошибка при удалении фильма');\n//         openPopupError(true)\n//     });\nvar updatedMovies=addedMovies.filter(function(item){return item.movieId!==movie.movieId;});handleUpdateUsersMovies(updatedMovies);}var _useLocation=useLocation(),pathname=_useLocation.pathname;return/*#__PURE__*/_jsxs(\"div\",{className:\"moviesCard\",children:[/*#__PURE__*/_jsx(Link,{to:movie.trailerLink,target:\"_blank\",children:/*#__PURE__*/_jsx(\"img\",{className:\"moviesCard__image\",src:pathname===\"/movies\"?\"https://api.nomoreparties.co\".concat(movie.image.url):\"\".concat(movie.image),alt:\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"moviesCard__container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"moviesCard__name\",children:movie.nameRU}),pathname===\"/saved-movies\"?/*#__PURE__*/_jsx(\"button\",{className:\"moviesCard__button\",children:/*#__PURE__*/_jsx(\"img\",{src:deleteButton,onClick:function onClick(){return deleteMovie(movie);},alt:\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A\\u0430\"})}):/*#__PURE__*/_jsx(\"button\",{className:\"moviesCard__button\",children:/*#__PURE__*/_jsx(\"img\",{onClick:changeLikeState,src:isLiked?buttonLikeImage:buttnNoLikeImage,alt:\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0434\\u0446\\u0430\"})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"moviesCard__movie-time\",children:numberToTime(movie.duration)})]});}export default MoviesCard;","map":{"version":3,"names":["buttnNoLikeImage","deleteButton","Link","useLocation","React","useEffect","useState","buttonLikeImage","mainApi","CurrentUserContext","UsersMovies","jsx","_jsx","jsxs","_jsxs","MoviesCard","_ref","movie","savedMovies","openPopupError","updateMoviesList","handleUpdateUsersMovies","_useState","_useState2","_slicedToArray","isLiked","setIsLiked","_useState3","_useState4","likedMovies","setLikedMovies","_useState5","_useState6","movieDelete","setMovieDelete","addedMovies","useContext","profileData","length","some","item","movieId","id","numberToTime","number","hours","Math","floor","minutes","concat","changeLikeState","movieDublicate","image","url","trailerLink","thumbnail","country","director","duration","year","description","nameRU","nameEN","owner","_id","prevLikedMovies","_toConsumableArray","isMovieInData","find","filter","console","log","deleteMovie","updatedMovies","_useLocation","pathname","className","children","to","target","src","alt","onClick"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend-no-api/src/components/MoviesCard/MoviesCard.js"],"sourcesContent":["import buttnNoLikeImage from '../../images/button-noLike__image.svg'\r\nimport deleteButton from '../../images/delete__button.svg'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport buttonLikeImage from '../../images/button-like__image.svg'\r\nimport { mainApi } from \"../../utils/MainApi\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\nimport { UsersMovies } from \"../../contexts/UsersMovies\";\r\n\r\nfunction MoviesCard({ movie, savedMovies, openPopupError, updateMoviesList, handleUpdateUsersMovies }) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [likedMovies, setLikedMovies] = useState([]);\r\n    const [movieDelete, setMovieDelete] = useState([])\r\n\r\n    const addedMovies = React.useContext(UsersMovies);\r\n\r\n    const profileData = React.useContext(CurrentUserContext)\r\n\r\n    useEffect(() => {\r\n        if (savedMovies && savedMovies.length > 0) {\r\n            const likedMovies = savedMovies.some(item => item.movieId === movie.id);\r\n            if (likedMovies) {\r\n                setIsLiked(true);\r\n            }\r\n        }\r\n    }, [movie.id, savedMovies]);\r\n\r\n\r\n    function numberToTime(number) {\r\n        const hours = Math.floor(number / 60);\r\n        const minutes = number % 60;\r\n        return `${hours}ч${minutes}м`;\r\n    }\r\n\r\n    function changeLikeState() {\r\n        setIsLiked(!isLiked);\r\n\r\n        const movieDublicate = {\r\n            image: `https://api.nomoreparties.co${movie.image.url}`,\r\n            trailerLink: movie.trailerLink,\r\n            thumbnail: 'https://api.nomoreparties.co' + movie.image.url,\r\n            movieId: movie.id,\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n            owner: profileData._id\r\n        }\r\n\r\n        if (!isLiked) {\r\n            //setLikedMovies(prevLikedMovies => [...prevLikedMovies, movieDublicate]);\r\n            handleUpdateUsersMovies(prevLikedMovies => [...prevLikedMovies, movieDublicate])\r\n            // mainApi.addMovie(movieDublicate)\r\n            // .then((res) => {\r\n            //     console.log('Фильм успешно добавлен');\r\n            // })\r\n            // .catch((error) => {\r\n            //     console.log('Ошибка при добавлении фильма');\r\n            //     openPopupError(true)\r\n            // });\r\n        } else {\r\n            // mainApi.getMovies()\r\n            //     .then(async (data) => {\r\n            //         const isMovieInData = data.find(item => item.movieId === movieDublicate.movieId);\r\n            //         if (isMovieInData) {\r\n            //             await mainApi.deleteMovie(isMovieInData._id);\r\n            //             setLikedMovies(prevLikedMovies => prevLikedMovies.filter(item => item.movieId !== isMovieInData.movieId));\r\n            //             console.log('Фильм успешно удален');\r\n            //         }\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         console.log(error);\r\n            //         openPopupError(true)\r\n            //     });\r\n            const isMovieInData = addedMovies.find(item => item.movieId === movieDublicate.movieId);\r\n            if (isMovieInData) {\r\n                handleUpdateUsersMovies(prevLikedMovies => prevLikedMovies.filter(item => item.movieId !== isMovieInData.movieId));\r\n                console.log('Фильм успешно удален');\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteMovie(movie) {\r\n        // console.log(movie);\r\n        // mainApi.deleteMovie(movie._id)\r\n        //     .then((res) => {\r\n        //         updateMoviesList(movie)\r\n        //         console.log('Фильм успешно удален');\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log('Ошибка при удалении фильма');\r\n        //         openPopupError(true)\r\n        //     });\r\n            const updatedMovies = addedMovies.filter(item => item.movieId !== movie.movieId);\r\n            handleUpdateUsersMovies(updatedMovies);\r\n    }\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    return (\r\n        <div className=\"moviesCard\">\r\n            <Link to={movie.trailerLink} target=\"_blank\">\r\n                <img className=\"moviesCard__image\" src={pathname === \"/movies\" ? `https://api.nomoreparties.co${movie.image.url}`\r\n                    : `${movie.image}`}\r\n                    alt=\"Изображение фильма\"></img>\r\n            </Link>\r\n            <div className=\"moviesCard__container\">\r\n                <h2 className=\"moviesCard__name\">{movie.nameRU}</h2>\r\n                {\r\n                    pathname === \"/saved-movies\"\r\n                        ? <button className=\"moviesCard__button\"><img src={deleteButton} onClick={() => deleteMovie(movie)}\r\n                            alt=\"Изображение крестика\"></img></button>\r\n                        : <button\r\n                            className=\"moviesCard__button\"><img onClick={changeLikeState} src={isLiked ? buttonLikeImage : buttnNoLikeImage}\r\n                                alt=\"Изображение сердца\"></img></button>\r\n                }\r\n            </div>\r\n            <p className=\"moviesCard__movie-time\">{numberToTime(movie.duration)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}