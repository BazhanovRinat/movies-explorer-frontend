{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79267\\\\Desktop\\\\praktikum\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { moviesApi } from \"../../utils/MoviesApi\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [visibleMovies, setVisibleMovies] = useState([]);\n  const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\n  const [searched, setSearched] = useState(false);\n  useEffect(() => {\n    // Не загружать фильмы при загрузке страницы\n  }, []);\n  function findMovie(filter, isShortMovies) {\n    moviesApi.getMovies().then(data => {\n      let filteredMovies = data.filter(({\n        nameRU\n      }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\n      if (isShortMovies === true) {\n        filteredMovies = filteredMovies.filter(({\n          duration\n        }) => duration <= 30);\n      }\n      setMovies(filteredMovies);\n      setMaxVisibleMovies(16);\n      setSearched(true);\n    }).catch(error => {\n      console.log(`${error}`);\n    });\n  }\n  function loadMoreMovies() {\n    // Определите, сколько карточек нужно добавить при нажатии на кнопку \"Еще\" в зависимости от ширины экрана\n    let cardsToAdd = 4; // По умолчанию для широкого экрана\n\n    const screenWidth = window.innerWidth;\n    if (screenWidth <= 480) {\n      cardsToAdd = 2; // Для узкого экрана\n    }\n\n    setMaxVisibleMovies(prevMaxVisibleMovies => prevMaxVisibleMovies + cardsToAdd);\n  }\n  useEffect(() => {\n    if (searched) {\n      updateVisibleMovies();\n    }\n  }, [movies, maxVisibleMovies, searched]);\n  function updateVisibleMovies() {\n    const moviesToShow = movies.slice(0, maxVisibleMovies);\n    setVisibleMovies(moviesToShow);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      findMovie: findMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), searched && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      movies: visibleMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this), searched && visibleMovies.length < movies.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"movies__moreMovies-btn\",\n      onClick: loadMoreMovies,\n      children: \"\\u0415\\u0449\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Movies, \"TruHAFOUnpotWxsJLGB5kr/u9GM=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","useContext","moviesApi","SearchForm","MoviesCardList","jsxDEV","_jsxDEV","Movies","_s","movies","setMovies","visibleMovies","setVisibleMovies","maxVisibleMovies","setMaxVisibleMovies","searched","setSearched","findMovie","filter","isShortMovies","getMovies","then","data","filteredMovies","nameRU","toLowerCase","includes","duration","catch","error","console","log","loadMoreMovies","cardsToAdd","screenWidth","window","innerWidth","prevMaxVisibleMovies","updateVisibleMovies","moviesToShow","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/79267/Desktop/praktikum/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { moviesApi } from \"../../utils/MoviesApi\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\n\r\nfunction Movies() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [visibleMovies, setVisibleMovies] = useState([]);\r\n    const [maxVisibleMovies, setMaxVisibleMovies] = useState(16);\r\n    const [searched, setSearched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Не загружать фильмы при загрузке страницы\r\n    }, []);\r\n\r\n    function findMovie(filter, isShortMovies) {\r\n        moviesApi.getMovies()\r\n            .then((data) => {\r\n                let filteredMovies = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(filter.toLowerCase()));\r\n                if (isShortMovies === true) {\r\n                    filteredMovies = filteredMovies.filter(({ duration }) => duration <= 30);\r\n                }\r\n                setMovies(filteredMovies);\r\n                setMaxVisibleMovies(16);\r\n                setSearched(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(`${error}`);\r\n            });\r\n    }\r\n\r\n    function loadMoreMovies() {\r\n        // Определите, сколько карточек нужно добавить при нажатии на кнопку \"Еще\" в зависимости от ширины экрана\r\n        let cardsToAdd = 4; // По умолчанию для широкого экрана\r\n\r\n        const screenWidth = window.innerWidth;\r\n\r\n        if (screenWidth <= 480) {\r\n            cardsToAdd = 2; // Для узкого экрана\r\n        }\r\n\r\n        setMaxVisibleMovies(prevMaxVisibleMovies => prevMaxVisibleMovies + cardsToAdd);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searched) {\r\n            updateVisibleMovies();\r\n        }\r\n    }, [movies, maxVisibleMovies, searched]);\r\n\r\n    function updateVisibleMovies() {\r\n        const moviesToShow = movies.slice(0, maxVisibleMovies);\r\n        setVisibleMovies(moviesToShow);\r\n    }\r\n\r\n    return (\r\n        <main className=\"movies\">\r\n            <SearchForm findMovie={findMovie}/>\r\n            {searched && <MoviesCardList movies={visibleMovies} />}\r\n            {searched && visibleMovies.length < movies.length && (\r\n                <button className=\"movies__moreMovies-btn\" onClick={loadMoreMovies}>Еще</button>\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}